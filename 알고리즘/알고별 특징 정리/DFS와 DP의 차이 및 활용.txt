상황별로 어떤 알고리즘을 선택해야 하는걸까? 

알고리즘 효율성 및 장단점.

★ DFS와 DP는 다른건가? 
- 메모이제이션을 활용하고 안 하고의 차이다. 
- DFS는 방문했던 곳을 또 방문해서 비효율적이지만, DP는 방문했던 곳은 기록해둠으로써 접근하지 않는다.

★ DFS 
- 완전탐색으로 N이 큰 경우 시간초과 발생할 가능성이 큰 방법이다. 
- DFS보다는 DP가 효율적이다. 

★DP
- DFS보다는 DP가 효율적이고 시간초과가 덜 난다. 왜냐하면 메모이제이션을 활용하기 때문이다.
- 따라서 DFS로 접근했던 문제 중 n이 10만 이상인 경우 DP로 접근한다. 그래야 시간초과가 안 난다. 
- 메모이제이션은 재귀적 구조(Top-Down)에 사용하는 것보다 반복문(Down-Top)에서 사용하는 것이 효율적이다. 
- 재귀함수의 경우 스택오버플로우가 발생할 수 있기 때문이다.
- 함수호출이 많고 스택에 메모리가 쌓이는 부담이 있기 때문이다. 