<Priority_Queue>  

(1) 특징
- 자료구조 힙을 이용해 구현됨. (여러가지 방법이 있지만 가장 효율적)
- <queue> 라이브러리에서 지원 
- 우선순위(오름차순, 내림차순, 절대값 등등)에 따라 정렬된 큐 
- 즉 ① 삽입 및 삭제할 때, Queue 특성 
      ② 단, 삽입 및 삭제할 때마다 우선순위에 따라 정렬해서 항상 특성을 유지하려 함, Heap 특성 
	☞ 힙 자료구조에 데이터를 넣은 이상 항상 특성을 유지하려는 것, 이게 장점임. 
※ <queue> 라이브러리의 priority_queue는 '내림차순'이 기본 정렬
※ <algorithm> 라이브러리에서 제공하는 sort 정렬은 '오름차순'이 기본 정렬

- 종류: 최대힙(부모 노드 > 자식 노드), 최소힙(부모 노드 < 자식 노드)  ☞ 간단히 말해서 오름차순, 내림차순

출처: https://gmlwjd9405.github.io/2018/05/10/data-structure-heap.html


(2) 사용법
- priority_queue<int> 변수명 : 기본 내림차순 정렬
- priority_queue<int, vector<int>, greater<int>> 변수명: 오름차순 정렬
- priority_queue<int, vector<int>, compare> 변수명: 비교함수 기준으로 정렬

- 힙(우선순위큐)에서 자주 사용하는 함수: 
① top(): 우선순위에 따라 맨 앞이 달라짐. 
② pop(): 맨 앞 삭제.

출처: https://travelbeeee.tistory.com/126


<벡터>
사용방법 참고 사이트 -> https://twpower.github.io/77-how-to-use-vector-in-cpp

1. 벡터의 erase 함수 사용하면 시간초과 뜸. 
2. 우선순위 큐 priority_queue 라이브러리 사용해야 함.
3. 우선순위 큐 오름차순 정렬

