<해시맵(→ unordered_map)>

★맵의 특징: 중복된 키(key) 존재하지 X ★

(1) 맵(map)과 해시맵(unordered_map)의 차이점
☞ 두 STL은 구현방법이 다름.
☞ 데이터가 적으면 unordered_map이 더 빠르다. 하지만 데이터가 많다면 map이 유리하다.

출처: https://kamang-it.tistory.com/entry/mapunorderedmapC%EC%97%90%EC%84%9C-map%EB%94%95%EC%85%94%EB%84%88%EB%A6%ACdictionary-%EC%97%B0%EA%B4%80%EB%B0%B0%EC%97%B4associate-array%ED%95%B4%EC%8B%9C%EB%A7%B5hash-map%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0map%EA%B3%BC-unorderedmap-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%B0%A8%EC%9D%B4%EC%A0%90

(2) STL 라이브러리 

#include <hash_map> -> 표준 x, 에러 뜨는 곳 많음  
#include <unordered_map> -> 표준화됨 

(3) 사용법 

☞ find 
☞ v.count(키): 키에 해당하는 값이 있는지 확인...따라서 1개 또는 0개

- 해시맵에서의 경우의 수 -> 옷 4종류 중에 1가지 종류, 2가지 종류, 3가지 종류, 4가지 종류 
		       -> 모든 경우의 수 = 각 case + 1(안 입을 경우)의  모두 곱 

- 해시맵의 for문으로 접근할 때 자료형?  
☞ auto 
for(auto ptr = map.begin(); ptr != map.end(); ptr++)    
        answer *= (ptr->second + 1); 


출처: https://math-coding.tistory.com/m/31